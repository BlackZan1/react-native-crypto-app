{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\nodeJs\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\CryptoApp\\\\App.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LayoutRectangle } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nexport default function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var onChangeHandler = function onChangeHandler(value) {\n    console.log(value);\n    setTitle(value);\n  };\n\n  var onPressHandler = function onPressHandler() {\n    var dataItem = {\n      id: Math.floor(Math.random() * 8999) + 1000,\n      value: title\n    };\n    console.log(dataItem);\n    setData(function (prev) {\n      return [].concat(_toConsumableArray(prev), [dataItem]);\n    });\n    setTitle('');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    onTouchEnd: function onTouchEnd() {\n      return setCount(count + 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Clicks!\"), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, count)), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      width: '65%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: onChangeHandler,\n    value: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: 'Add',\n    style: styles.button,\n    onPress: onPressHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, data.length ? data.map(function (item, index) {\n    return React.createElement(Text, {\n      style: styles.smallTitle,\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, index + 1, \". \", item.value);\n  }) : null));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    color: '#000',\n    textAlign: 'center'\n  },\n  smallTitle: {\n    fontSize: 20\n  },\n  input: {\n    paddingHorizontal: 10,\n    width: 200,\n    height: 45,\n    borderRadius: 10,\n    borderColor: '#a9a9a9',\n    borderBottomWidth: 2,\n    backgroundColor: '#f5f5f5',\n    marginVertical: 20\n  },\n  button: {\n    backgroundColor: 'red',\n    width: 120\n  }\n});","map":{"version":3,"sources":["D:/nodeJs/Проекты/CryptoApp/App.js"],"names":["React","useState","LayoutRectangle","App","count","setCount","data","setData","title","setTitle","onChangeHandler","value","console","log","onPressHandler","dataItem","id","Math","floor","random","prev","styles","container","flexDirection","alignItems","justifyContent","width","input","button","length","map","item","index","smallTitle","StyleSheet","create","flex","backgroundColor","fontSize","color","textAlign","paddingHorizontal","height","borderRadius","borderColor","borderBottomWidth","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, LayoutRectangle, TextInput, Button, ScrollView } from 'react-native';\n\nexport default function App() {\n  let [count, setCount] = useState(0);\n  let [data, setData] = useState([]);\n  let [title, setTitle] = useState('');\n\n  const onChangeHandler = (value) => {\n    console.log(value)\n\n    setTitle(value);\n  }\n\n  const onPressHandler = () => {\n    let dataItem = {\n      id: Math.floor(Math.random() * 8999) + 1000,\n      value: title\n    }\n\n    console.log(dataItem)\n\n    setData(prev => ([\n      ...prev,\n      dataItem\n    ]))\n\n    setTitle('');\n  }\n\n  return (\n    <View style={styles.container} onTouchEnd={() => setCount(count + 1)}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Clicks!</Text>\n        <Text style={styles.title}>{count}</Text>\n      </View>\n\n      <View style={{flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around', width: '65%'}}>\n        <TextInput style={styles.input} onChangeText={onChangeHandler} value={title} />\n\n        <Button title={'Add'} style={styles.button} onPress={onPressHandler} />\n      </View>\n\n      <View style={styles.container}>\n        {\n          data.length ?\n          data.map((item, index) => <Text style={styles.smallTitle} key={item.id}>{index + 1}. {item.value}</Text>)\n          :\n          null\n        }\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 30,\n    color: '#000',\n    textAlign: 'center'\n  },\n  smallTitle: {\n    fontSize: 20\n  },\n  input: {\n    paddingHorizontal: 10,\n    width: 200,\n    height: 45,\n    borderRadius: 10,\n    borderColor: '#a9a9a9',\n    borderBottomWidth: 2,\n    backgroundColor: '#f5f5f5',\n    marginVertical: 20\n  },\n  button: {\n    backgroundColor: 'red',\n    width: 120\n  }\n});\n"]},"metadata":{},"sourceType":"module"}